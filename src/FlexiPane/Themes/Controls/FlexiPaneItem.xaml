<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:FlexiPane.Controls">

  <!--  Local BooleanToVisibilityConverter for this resource dictionary  -->
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

  <!--  FlexiPaneItem Default Style  -->
  <Style TargetType="{x:Type controls:FlexiPaneItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:FlexiPaneItem}">
          <Grid x:Name="PART_ContainerGrid" Background="Transparent">

            <!--  Selection Border (shows when selected)  -->
            <Border
              x:Name="SelectionBorder"
              BorderBrush="#FF007ACC"
              BorderThickness="2"
              CornerRadius="2"
              Visibility="Collapsed" />

            <!--  Actual content first  -->
            <ContentPresenter />

            <!--  Mouse over effect (overlay on content)  -->
            <Border
              x:Name="HoverBorder"
              Background="Transparent"
              BorderBrush="#30007ACC"
              BorderThickness="0"
              CornerRadius="2"
              IsHitTestVisible="False">
              <Border.Style>
                <Style TargetType="Border">
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=(controls:FlexiPanel.IsSplitModeActive), RelativeSource={RelativeSource AncestorType=controls:FlexiPaneItem}}" Value="True">
                      <Setter Property="IsHitTestVisible" Value="True" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="BorderThickness" Value="2" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Border.Style>
            </Border>

            <!--  Close button - Bound to FlexiPanel's ShowCloseButtons  -->
            <Button
              x:Name="PART_CloseButton"
              Width="24"
              Height="24"
              Margin="25"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Panel.ZIndex="1000"
              Background="#CCFF4444"
              BorderBrush="#FFFF4444"
              BorderThickness="1"
              Command="{TemplateBinding CloseCommand}"
              Cursor="Hand"
              ToolTip="Close Pane"
              Visibility="{Binding Path=(controls:FlexiPanel.ShowCloseButtons), RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
              <Button.Template>
                <ControlTemplate TargetType="Button">
                  <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="12">
                    <Path
                      Width="8"
                      Height="8"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M0,0 L8,8 M0,8 L8,0"
                      Stroke="White"
                      StrokeThickness="2" />
                  </Border>
                </ControlTemplate>
              </Button.Template>
              <Button.Style>
                <Style TargetType="Button">
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" Value="#FFFF4444" />
                      <Setter Property="BorderBrush" Value="#FFFF6666" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                      <Setter Property="Background" Value="#FFDD2222" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Button.Style>
            </Button>

            <!--  Split mode overlay - Bound to FlexiPanel's Attached Property  -->
            <Grid
              x:Name="PART_SplitOverlay"
              Panel.ZIndex="500"
              Background="#80000000"
              Focusable="True"
              Visibility="{Binding Path=(controls:FlexiPanel.IsSplitModeActive), RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">

              <!--  Dark background  -->
              <Border
                Margin="2"
                Background="#C0000000"
                CornerRadius="4"
                Opacity="0.6" />

              <!--  Split guide  -->
              <Grid Background="Transparent">
                <!--  Dynamic split guide lines (red solid lines)  -->
                <Line
                  x:Name="PART_VerticalGuideLine"
                  Panel.ZIndex="600"
                  Opacity="0"
                  Stroke="#FFFF0000"
                  StrokeThickness="3"
                  X1="0"
                  X2="0"
                  Y1="0"
                  Y2="100" />

                <Line
                  x:Name="PART_HorizontalGuideLine"
                  Panel.ZIndex="600"
                  Opacity="0"
                  Stroke="#FFFF0000"
                  StrokeThickness="3"
                  X1="0"
                  X2="100"
                  Y1="0"
                  Y2="0" />

                <!--  Top guide (auto-set to vertical split on hover)  -->
                <Border
                  Height="24"
                  VerticalAlignment="Top"
                  Background="#60007ACC"
                  BorderBrush="#FF007ACC"
                  BorderThickness="0,0,0,1"
                  ToolTip="Hover to set VERTICAL split mode">
                  <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                      FontSize="16"
                      FontWeight="Bold"
                      Foreground="White"
                      Text="↕" />
                  </StackPanel>
                </Border>

                <!--  Bottom guide (auto-set to vertical split on hover)  -->
                <Border
                  Height="24"
                  VerticalAlignment="Bottom"
                  Background="#60007ACC"
                  BorderBrush="#FF007ACC"
                  BorderThickness="0,1,0,0"
                  ToolTip="Hover to set VERTICAL split mode">
                  <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                      FontSize="16"
                      FontWeight="Bold"
                      Foreground="White"
                      Text="↕" />
                  </StackPanel>
                </Border>

                <!--  Left guide (auto-set to horizontal split on hover)  -->
                <Border
                  Width="24"
                  HorizontalAlignment="Left"
                  Background="#6000CC44"
                  BorderBrush="#FF00CC44"
                  BorderThickness="0,0,1,0"
                  ToolTip="Hover to set HORIZONTAL split mode">
                  <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock
                      FontSize="16"
                      FontWeight="Bold"
                      Foreground="White"
                      Text="↔" />
                  </StackPanel>
                </Border>

                <!--  Right guide (auto-set to horizontal split on hover)  -->
                <Border
                  Width="24"
                  HorizontalAlignment="Right"
                  Background="#6000CC44"
                  BorderBrush="#FF00CC44"
                  BorderThickness="1,0,0,0"
                  ToolTip="Hover to set HORIZONTAL split mode">
                  <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock
                      FontSize="16"
                      FontWeight="Bold"
                      Foreground="White"
                      Text="↔" />
                  </StackPanel>
                </Border>

                <!--  Custom guide panel  -->
                <ContentPresenter
                  x:Name="PART_CustomGuideContent"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Panel.ZIndex="550"
                  Content="{TemplateBinding SplitGuideContent}"
                  ContentTemplate="{TemplateBinding SplitGuideContentTemplate}" />

                <!--  Default center guide panel  -->
                <Border
                  x:Name="PART_DefaultGuidePanel"
                  Margin="40"
                  Padding="16"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Background="#F0FFFFFF"
                  BorderBrush="#FF007ACC"
                  BorderThickness="2"
                  CornerRadius="6">
                  <StackPanel>
                    <TextBlock
                      Margin="4"
                      HorizontalAlignment="Center"
                      FontSize="18"
                      FontWeight="Bold"
                      Foreground="#FF007ACC"
                      Text="🔄 Split Mode" />
                    <TextBlock
                      Margin="6,2"
                      HorizontalAlignment="Center"
                      FontSize="12"
                      Foreground="#FF333333"
                      Text="📍 Click center to split" />
                    <TextBlock
                      Margin="6,2"
                      HorizontalAlignment="Center"
                      FontSize="12"
                      Foreground="#FF666666"
                      Text="ESC: Exit split mode" />
                  </StackPanel>
                </Border>
              </Grid>
            </Grid>
          </Grid>

          <ControlTemplate.Triggers>
            <!--  Show selection border when IsSelected is true  -->
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="SelectionBorder" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>